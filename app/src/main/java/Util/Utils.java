package Util;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.location.Address;
import android.location.Geocoder;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.util.Base64;

import com.google.android.gms.maps.model.LatLng;
import com.parse.ParseGeoPoint;

import java.io.ByteArrayOutputStream;
import java.util.List;
import java.util.Locale;

import Models.RequestModel;

/**
 * Created by iduma on 2/22/18.
 */

public class Utils {

    public String encoder(Bitmap image){
        String pic = null;
        try{
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            image.compress(Bitmap.CompressFormat.PNG, 30, baos);
            byte[] b = baos.toByteArray();
            pic =  Base64.encodeToString(b, Base64.DEFAULT);
        }catch (Exception e){

        }

        return pic;

    }


    public Bitmap decoder(String image) {
        Bitmap decodedImage = null;
        try{
            byte[] imageBytes = Base64.decode(image, Base64.DEFAULT);
            decodedImage = BitmapFactory.decodeByteArray(imageBytes, 0, imageBytes.length);
        }catch(Exception e){
            //  Log.e("Settings", "Caused " + e.getMessage());
        }
        return decodedImage;
    }


    public ParseGeoPoint geoLocation(LatLng location){
        String[] pointer = location.toString().split(",");
        double lat = Double.parseDouble(pointer[0]);
        double log = Double.parseDouble(pointer[1]);
        ParseGeoPoint locator = new ParseGeoPoint(lat, log);
        return locator;
    }

    public  RequestModel getAddress(Context context, double LATITUDE, double LONGITUDE) {

        RequestModel model = new RequestModel();
        try {
            Geocoder geocoder = new Geocoder(context, Locale.getDefault());
            List<Address> addresses = geocoder.getFromLocation(LATITUDE, LONGITUDE, 1);
            if (addresses != null && addresses.size() > 0) {
                model.setDestinationId(addresses.get(0).getAddressLine(0));
                model.setStatus(addresses.get(0).getLocality());
            }
        } catch (Exception e) {

        }
        return model;
    }


    public static final class Operations {
        private Operations() throws InstantiationException {
            throw new InstantiationException("This class is not for instantiation");
        }
        /**
         * Checks to see if the device is online before carrying out any operations.
         *
         * @return
         */
        public static boolean isOnline(Context context) {
            ConnectivityManager cm =
                    (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);
            NetworkInfo netInfo = cm.getActiveNetworkInfo();
            if (netInfo != null && netInfo.isConnectedOrConnecting()) {
                return true;
            }
            return false;
        }
    }
//    public Utils() throws InstantiationException {
//        throw new InstantiationException("This class is not for instantiation");
//    }



























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































}
